# Generated by biomes.ts - DO NOT MANUALLY EDIT!

apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: asset
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "biomes-nginx"}'
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: asset
    name: asset
  ports:
    - name: http
      port: 3000
      targetPort: nginx
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: asset
    name: asset
  namespace: default
  name: asset
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: asset
      name: asset
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: asset
    name: asset
  namespace: default
  name: asset
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: asset
      name: asset
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: asset
        name: asset
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/web/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
            - '-a'
            - local
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=1024'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: main
              containerPort: 3000
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 1024Mi
              cpu: '1.5'
        - name: nginx
          image: nginx:stable
          args: []
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx
          resources:
            requests:
              cpu: '1'
          ports:
            - name: nginx
              containerPort: 80
            - name: nginx-metrics
              containerPort: 81
          livenessProbe:
            httpGet:
              path: /l1-ready
              port: nginx-metrics
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /ready
              port: nginx-metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
---
apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: backup
    name: backup
  namespace: default
  name: backup
spec:
  schedule: 0 * * * *
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/component: biomes
            app.kubernetes.io/name: backup
            name: backup
          namespace: default
          annotations:
            linkerd.io/inject: enabled
            config.linkerd.io/proxy-await: enabled
            config.linkerd.io/skip-outbound-ports: 6379,2379
            config.linkerd.io/skip-subnets: 169.254.169.254/32
            config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
            kubectl.kubernetes.io/default-container: biomes
        spec:
          serviceAccountName: zones-backend
          nodeSelector:
            iam.gke.io/gke-metadata-server-enabled: 'true'
          terminationGracePeriodSeconds: 65
          volumes:
            - name: biomes-config
              configMap:
                name: biomes-config
                items:
                  - key: config
                    path: biomes.config.yaml
            - name: redis-replica-io
              hostPath:
                path: /tmp/redis-replica-io
                type: DirectoryOrCreate
            - name: nginx-config
              configMap:
                name: nginx-config
                items:
                  - key: config
                    path: nginx.conf
          initContainers:
            - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
              name: workload-identity-initcontainer
              command:
                - /bin/bash
                - '-c'
                - >-
                  curl -s -H 'Metadata-Flavor: Google'
                  'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
                  --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null
                  || exit 1
          containers:
            - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
              name: biomes
              args:
                - '-r'
                - ts-node/register
                - src/server/backup/main.ts
                - '--bikkieCacheMode'
                - redis
                - '--biscuitMode'
                - redis2
                - '--chatApiMode'
                - redis
                - '--firehoseMode'
                - redis
                - '--serverCacheMode'
                - redis
                - '--storageMode'
                - firestore
                - '--worldApiMode'
                - hfc-hybrid
              env:
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
                - name: CPU_COUNT
                  value: '1'
                - name: NODE_OPTIONS
                  value: '--openssl-legacy-provider --max-old-space-size=4096'
                - name: GOOGLE_CLOUD_PROJECT
                  value: zones-cloud
                - name: IS_SERVER
                  value: 'true'
                - name: NEXT_TELEMETRY_DISABLED
                  value: '1'
                - name: DETECT_GCP_RETRIES
                  value: '3'
                - name: USE_REDIS_REPLICAS
                  value: '0'
                - name: LD_PRELOAD
                  value: /usr/local/lib/libjemalloc.so.2
                - name: USE_K8_REDIS
                  value: '1'
              volumeMounts:
                - name: biomes-config
                  mountPath: /biomes
                - name: redis-replica-io
                  mountPath: /redis-replica-io
              ports:
                - name: metrics
                  containerPort: 3001
              resources:
                requests:
                  memory: 4096Mi
                  cpu: '1'
          restartPolicy: Never
      activeDeadlineSeconds: 600
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: notify
    name: notify
  namespace: default
  name: notify
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: notify
      name: notify
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: notify
        name: notify
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/notify/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '0.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=1024'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 1024Mi
              cpu: '0.5'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: trigger
    name: trigger
  namespace: default
  name: trigger
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: trigger
      name: trigger
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: trigger
        name: trigger
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/trigger/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=2048'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 2048Mi
              cpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: chat
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: chat
    name: chat
  ports:
    - name: http
      port: 3004
      targetPort: zrpc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: chat
    name: chat
  namespace: default
  name: chat
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: chat
      name: chat
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: chat
    name: chat
  namespace: default
  name: chat
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: chat
      name: chat
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: chat
        name: chat
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/chat/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=1024'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 1024Mi
              cpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: logic
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: logic
    name: logic
  ports:
    - name: http
      port: 3004
      targetPort: zrpc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: logic
    name: logic
  namespace: default
  name: logic
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: logic
      name: logic
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: logic
    name: logic
  namespace: default
  name: logic
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: logic
      name: logic
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: logic
        name: logic
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/logic/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: zrpc
              containerPort: 3004
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '1'
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: bikkie
    name: bikkie
  namespace: default
  name: bikkie
spec:
  serviceName: bikkie
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: bikkie
      name: bikkie
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: bikkie
        name: bikkie
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/bikkie/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: STATEFUL_SET_REPLICAS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: ask
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: ask
    name: ask
  ports:
    - name: http
      port: 3004
      targetPort: zrpc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: ask
    name: ask
  namespace: default
  name: ask
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: ask
      name: ask
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: ask
    name: ask
  namespace: default
  name: ask
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: ask
      name: ask
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: ask
        name: ask
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/ask/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: zrpc
              containerPort: 3004
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '1.5'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: balancer
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: balancer
    name: balancer
  ports:
    - name: http
      port: 3004
      targetPort: zrpc
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: balancer
    name: balancer
  namespace: default
  name: balancer
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: balancer
      name: balancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: balancer
    name: balancer
  namespace: default
  name: balancer
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: balancer
      name: balancer
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: balancer
        name: balancer
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/balancer/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '0.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=512'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: zrpc
              containerPort: 3004
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 512Mi
              cpu: '0.5'
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-flora
    name: gaia-flora
  namespace: default
  name: gaia-flora
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-flora
      name: gaia-flora
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-flora
    name: gaia-flora
  namespace: default
  name: gaia-flora
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-flora
      name: gaia-flora
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: gaia-flora
        name: gaia-flora
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/gaia_v2/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
            - '--simulations'
            - flora_decay
            - flora_growth
            - flora_muck
            - leaf_growth
            - tree_growth
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=6144'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: WASM_MEMORY
              value: '4096'
            - name: GAIA_SHARD_DOMAIN
              value: gaia-flora
            - name: SHARD_MANAGER_KIND
              value: distributed
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 6144Mi
              cpu: '1.5'
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-flow
    name: gaia-flow
  namespace: default
  name: gaia-flow
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-flow
      name: gaia-flow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-flow
    name: gaia-flow
  namespace: default
  name: gaia-flow
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-flow
      name: gaia-flow
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: gaia-flow
        name: gaia-flow
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/gaia_v2/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
            - '--simulations'
            - muck
            - water
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=6144'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: WASM_MEMORY
              value: '4096'
            - name: GAIA_SHARD_DOMAIN
              value: gaia-flow
            - name: SHARD_MANAGER_KIND
              value: distributed
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 6144Mi
              cpu: '1.5'
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-light
    name: gaia-light
  namespace: default
  name: gaia-light
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-light
      name: gaia-light
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-light
    name: gaia-light
  namespace: default
  name: gaia-light
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-light
      name: gaia-light
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: gaia-light
        name: gaia-light
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/gaia_v2/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
            - '--simulations'
            - irradiance
            - sky_occlusion
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=6144'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: WASM_MEMORY
              value: '4096'
            - name: GAIA_SHARD_DOMAIN
              value: gaia-light
            - name: SHARD_MANAGER_KIND
              value: distributed
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 6144Mi
              cpu: '1.5'
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-restoration
    name: gaia-restoration
  namespace: default
  name: gaia-restoration
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-restoration
      name: gaia-restoration
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-restoration
    name: gaia-restoration
  namespace: default
  name: gaia-restoration
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-restoration
      name: gaia-restoration
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: gaia-restoration
        name: gaia-restoration
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/gaia_v2/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
            - '--simulations'
            - restoration
            - lifetime
            - ore_growth
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=6144'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: WASM_MEMORY
              value: '4096'
            - name: GAIA_SHARD_DOMAIN
              value: gaia-restoration
            - name: SHARD_MANAGER_KIND
              value: distributed
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 6144Mi
              cpu: '1.5'
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-farming
    name: gaia-farming
  namespace: default
  name: gaia-farming
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-farming
      name: gaia-farming
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: gaia-farming
    name: gaia-farming
  namespace: default
  name: gaia-farming
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: gaia-farming
      name: gaia-farming
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: gaia-farming
        name: gaia-farming
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/gaia_v2/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
            - '--simulations'
            - farming
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=6144'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: WASM_MEMORY
              value: '4096'
            - name: GAIA_SHARD_DOMAIN
              value: gaia-farming
            - name: SHARD_MANAGER_KIND
              value: distributed
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 6144Mi
              cpu: '1.5'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: map
    name: map
  namespace: default
  name: map
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: map
      name: map
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: map
        name: map
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/map/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=10240'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 10240Mi
              cpu: '1'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: newton
    name: newton
  namespace: default
  name: newton
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: newton
      name: newton
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: newton
        name: newton
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/newton/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: SHARD_MANAGER_KIND
              value: distributed
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '1'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: sidefx
    name: sidefx
  namespace: default
  name: sidefx
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: sidefx
      name: sidefx
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: sidefx
        name: sidefx
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/sidefx/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '1'
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: anima
    name: anima
  namespace: default
  name: anima
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: anima
      name: anima
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: anima
    name: anima
  namespace: default
  name: anima
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: anima
      name: anima
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: anima
        name: anima
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/anima/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: ANIMA_HFC_WRITES
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '1'
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: anima
    name: anima
  namespace: default
  name: anima
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: anima
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: spawn
    name: spawn
  namespace: default
  name: spawn
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: spawn
      name: spawn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: spawn
    name: spawn
  namespace: default
  name: spawn
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: spawn
      name: spawn
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: spawn
        name: spawn
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/spawn/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '0.5'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=4096'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 4096Mi
              cpu: '0.5'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: oob
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "biomes-nginx"}'
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: oob
    name: oob
  ports:
    - name: http
      port: 3000
      targetPort: nginx
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: oob
    name: oob
  namespace: default
  name: oob
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: oob
      name: oob
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: oob
    name: oob
  namespace: default
  name: oob
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: oob
      name: oob
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: oob
        name: oob
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/oob/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=1024'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: PERMIT_ANONYMOUS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: main
              containerPort: 3000
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 1024Mi
              cpu: '1'
        - name: nginx
          image: nginx:stable
          args: []
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx
          resources:
            requests:
              cpu: '1'
          ports:
            - name: nginx
              containerPort: 80
            - name: nginx-metrics
              containerPort: 81
          livenessProbe:
            httpGet:
              path: /l1-ready
              port: nginx-metrics
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /ready
              port: nginx-metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: sync
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "biomes-sockets"}'
spec:
  selector:
    biomes/provider: sync
  ports:
    - name: http
      port: 3000
      targetPort: main
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: sync
    name: sync
  namespace: default
  name: sync
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: sync
      name: sync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    biomes/provider: sync
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: sync
    name: sync
  namespace: default
  name: sync
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: sync
      name: sync
  template:
    metadata:
      labels:
        biomes/provider: sync
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: sync
        name: sync
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/sync/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '2'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=2048'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: main
              containerPort: 3000
            - name: zrpc
              containerPort: 3004
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 2048Mi
              cpu: '2'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: ro-sync
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "biomes-sockets"}'
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: ro-sync
    name: ro-sync
  ports:
    - name: http
      port: 3000
      targetPort: main
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: ro-sync
    name: ro-sync
  namespace: default
  name: ro-sync
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: ro-sync
      name: ro-sync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: ro-sync
    name: ro-sync
  namespace: default
  name: ro-sync
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: ro-sync
      name: ro-sync
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: ro-sync
        name: ro-sync
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/sync/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '2'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=2048'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
            - name: RO_SYNC
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: main
              containerPort: 3000
            - name: zrpc
              containerPort: 3004
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 2048Mi
              cpu: '2'
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: web
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "biomes-nginx"}'
spec:
  selector:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: web
    name: web
  ports:
    - name: http
      port: 3000
      targetPort: nginx
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: web
    name: web
  namespace: default
  name: web
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: web
      name: web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: biomes
    app.kubernetes.io/name: web
    name: web
  namespace: default
  name: web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/component: biomes
      app.kubernetes.io/name: web
      name: web
  template:
    metadata:
      labels:
        app.kubernetes.io/component: biomes
        app.kubernetes.io/name: web
        name: web
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: 6379,2379
        config.linkerd.io/skip-subnets: 169.254.169.254/32
        config.alpha.linkerd.io/proxy-wait-before-exit-seconds: '60'
        kubectl.kubernetes.io/default-container: biomes
    spec:
      serviceAccountName: zones-backend
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: 'true'
      terminationGracePeriodSeconds: 65
      volumes:
        - name: biomes-config
          configMap:
            name: biomes-config
            items:
              - key: config
                path: biomes.config.yaml
        - name: redis-replica-io
          hostPath:
            path: /tmp/redis-replica-io
            type: DirectoryOrCreate
        - name: nginx-config
          configMap:
            name: nginx-config
            items:
              - key: config
                path: nginx.conf
      initContainers:
        - image: gcr.io/google.com/cloudsdktool/cloud-sdk:326.0.0-alpine
          name: workload-identity-initcontainer
          command:
            - /bin/bash
            - '-c'
            - >-
              curl -s -H 'Metadata-Flavor: Google'
              'http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token'
              --retry 30 --retry-connrefused --retry-max-time 30 > /dev/null ||
              exit 1
      containers:
        - image: us-central1-docker.pkg.dev/zones-cloud/b/biomes:thomas-manual
          name: biomes
          args:
            - '-r'
            - ts-node/register
            - src/server/web/main.ts
            - '--bikkieCacheMode'
            - redis
            - '--biscuitMode'
            - redis2
            - '--chatApiMode'
            - redis
            - '--firehoseMode'
            - redis
            - '--serverCacheMode'
            - redis
            - '--storageMode'
            - firestore
            - '--worldApiMode'
            - hfc-hybrid
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CPU_COUNT
              value: '1'
            - name: NODE_OPTIONS
              value: '--openssl-legacy-provider --max-old-space-size=1500'
            - name: GOOGLE_CLOUD_PROJECT
              value: zones-cloud
            - name: IS_SERVER
              value: 'true'
            - name: NEXT_TELEMETRY_DISABLED
              value: '1'
            - name: DETECT_GCP_RETRIES
              value: '3'
            - name: USE_REDIS_REPLICAS
              value: '0'
            - name: LD_PRELOAD
              value: /usr/local/lib/libjemalloc.so.2
            - name: USE_K8_REDIS
              value: '1'
          volumeMounts:
            - name: biomes-config
              mountPath: /biomes
            - name: redis-replica-io
              mountPath: /redis-replica-io
          ports:
            - name: metrics
              containerPort: 3001
            - name: main
              containerPort: 3000
          startupProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /alive
              port: metrics
            failureThreshold: 10
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
          resources:
            requests:
              memory: 1500Mi
              cpu: '1'
        - name: nginx
          image: nginx:stable
          args: []
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx
          resources:
            requests:
              cpu: '1'
          ports:
            - name: nginx
              containerPort: 80
            - name: nginx-metrics
              containerPort: 81
          livenessProbe:
            httpGet:
              path: /l1-ready
              port: nginx-metrics
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /ready
              port: nginx-metrics
            failureThreshold: 1
            initialDelaySeconds: 0
            periodSeconds: 1
            timeoutSeconds: 1
